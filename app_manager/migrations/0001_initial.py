# Generated by Django 2.2.8 on 2020-01-07 12:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_plan_steps', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='BloomFamily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='BloomLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='BloomTaxonomy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app_manager.BloomFamily')),
                ('level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app_manager.BloomLevel')),
            ],
        ),
        migrations.CreateModel(
            name='BloomVerb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verb', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='CctlAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='Deliverable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=1024)),
                ('image', models.CharField(max_length=256)),
                ('solution', models.CharField(max_length=1024)),
                ('pub_date', models.DateTimeField(verbose_name='date published')),
            ],
        ),
        migrations.CreateModel(
            name='ExerciseManipulation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manipulation_text', models.CharField(max_length=1024)),
                ('manipulation_image', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='InvestigationMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('investigation_method', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='InvolvingContext',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('involving_context', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='KeyWord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=1024)),
                ('definition', models.CharField(max_length=1024)),
                ('definition_schema', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='date published')),
                ('deliverable', models.ForeignKey(null=True, on_delete='cascade', to='app_manager.Deliverable')),
            ],
        ),
        migrations.CreateModel(
            name='NewCenturySkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_century_skill', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref', models.CharField(max_length=1024)),
                ('image', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=1024)),
                ('taxonomy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app_manager.BloomTaxonomy')),
            ],
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('text', models.CharField(max_length=1024)),
                ('steps', models.ManyToManyField(to='app_manager.Exercise')),
            ],
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('text', models.CharField(max_length=256)),
                ('pub_date', models.DateTimeField(verbose_name='date published')),
                ('author', models.OneToOneField(null=True, on_delete='cascade', to=settings.AUTH_USER_MODEL)),
                ('problem', models.ForeignKey(null=True, on_delete='cascade', to='app_manager.Problem')),
            ],
        ),
        migrations.CreateModel(
            name='ValidationQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=1024)),
                ('answer', models.CharField(max_length=1024)),
                ('answer_schema', models.CharField(max_length=256)),
                ('problem', models.ForeignKey(null=True, on_delete='cascade', to='app_manager.Problem')),
            ],
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=1024)),
                ('image', models.CharField(max_length=256)),
                ('problem', models.ForeignKey(null=True, on_delete='cascade', to='app_manager.Problem')),
            ],
        ),
        migrations.CreateModel(
            name='SkillRubricks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_A', models.CharField(max_length=1024)),
                ('level_B', models.CharField(max_length=1024)),
                ('level_C', models.CharField(max_length=1024)),
                ('level_D', models.CharField(max_length=1024)),
                ('skill', models.ForeignKey(on_delete='cascade', to='app_manager.Skill')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_text', models.CharField(max_length=1024)),
                ('project_milestones', models.ManyToManyField(to='app_manager.Milestone')),
                ('project_problems', models.ManyToManyField(to='app_manager.Problem')),
                ('project_resources', models.ManyToManyField(to='app_manager.Resource')),
                ('project_versions', models.ManyToManyField(to='app_manager.Version')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=1024)),
                ('action_plan', models.ManyToManyField(to='app_manager.ActionPlan')),
                ('keyword', models.ManyToManyField(to='app_manager.KeyWord')),
                ('problem', models.ForeignKey(null=True, on_delete='cascade', to='app_manager.Problem')),
                ('resources', models.ManyToManyField(to='app_manager.Resource')),
                ('skill', models.ManyToManyField(to='app_manager.Skill')),
            ],
        ),
        migrations.CreateModel(
            name='Hypothesis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=1024)),
                ('answer', models.CharField(max_length=1024)),
                ('answer_image', models.CharField(max_length=256)),
                ('problem', models.ForeignKey(null=True, on_delete='cascade', to='app_manager.Problem')),
            ],
        ),
        migrations.CreateModel(
            name='HintAndAdvise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=1024)),
                ('problem', models.ForeignKey(null=True, on_delete='cascade', to='app_manager.Problem')),
            ],
        ),
        migrations.AddField(
            model_name='exercise',
            name='manipulations',
            field=models.ForeignKey(null=True, on_delete='cascade', to='app_manager.ExerciseManipulation'),
        ),
        migrations.AddField(
            model_name='exercise',
            name='skills',
            field=models.ForeignKey(null=True, on_delete='cascade', to='app_manager.Skill'),
        ),
        migrations.AddField(
            model_name='deliverable',
            name='skills',
            field=models.ForeignKey(null=True, on_delete='cascade', to='app_manager.Skill'),
        ),
        migrations.CreateModel(
            name='CctlQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=1024)),
                ('answers', models.ManyToManyField(to='app_manager.CctlAnswer')),
                ('skill', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app_manager.Skill')),
            ],
        ),
        migrations.CreateModel(
            name='CCTL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('questions', models.ManyToManyField(to='app_manager.CctlQuestion')),
            ],
        ),
        migrations.AddField(
            model_name='bloomtaxonomy',
            name='verb',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app_manager.BloomVerb'),
        ),
        migrations.CreateModel(
            name='APPMetaData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('investigation_methods', models.ManyToManyField(to='app_manager.InvestigationMethod')),
                ('involving_contexts', models.ManyToManyField(to='app_manager.InvolvingContext')),
                ('new_century_skills', models.ManyToManyField(to='app_manager.NewCenturySkill')),
            ],
        ),
    ]
